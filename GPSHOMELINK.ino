// BASED ON THE PROJECT BY SIMONDANKELMANN ESP32_CC1101_STANDALONE
// https://github.com/simondankelmann/Esp32-SubGhz/tree/main/Esp32/Esp32-CC1101-Standalone/ESP32_CC1101_STANDALONE
//
// CODE IS SERVED AS IS, DON'T USE IT IF YOU DON'T KNOW WHAT YOU ARE DOING
// PIN CONNECTIONS ARE AS FOLLOW:
//
// ESP32        CC1101      NEO-6M
// GND          1           GND
// 3,3V         2           VCC
// 12           3
// 5            4
// 10           5
// 23           6
// 19           7 
// NONE         8
// 16                       TXD
// 17                       RXD
// 
// RECOMENDATIONS:
// DON'T BE CHEAP, BUY A CC101 WITH ANTENNA AND BUY THE NEO-6M, NEO-7M OR NEO-8M FROM RELIABLE SOURCES
// THERE ARE A LOT OF COUNTERFAITS ON THE WEB.



//////////////////////    LIBRARIES   //////////////////////////////////
// Libraries

#include <TinyGPSPlus.h>
#include <HardwareSerial.h>
#include <ELECHOUSE_CC1101_SRC_DRV.h>
#include <WiFi.h>
#include <WebServer.h>

///////////////////////   WIFI   ///////////////////////////////////////
// WiFi credentials, port and activation
const char* ssid = "ESP32_Logs"; // CHANGE ME
const char* password = "12345678"; // CHANGE ME
WebServer server(80);

///////////////////////  CC1101  //////////////////////////////////////
// M1101 pin definition
#define PIN_GDO0 12
#define PIN_GDO2 4

////////////////////////  GPS  ///////////////////////////////////////
// Create a GPS object, define pins and baud rate
TinyGPSPlus gps;
// Use hardware serial port for the GPS (you can choose another port if needed)
HardwareSerial gpsSerial(1);
// Define the RX and TX pins for the GPS module (adjust these pins as needed)
const int GPS_RX_PIN = 16; // ESP32 pin connected to GPS module TX
const int GPS_TX_PIN = 17; // ESP32 pin connected to GPS module RX
// GPS module baud rate (commonly 9600 for NEO-6M and NEO-7M or 38400 for the NEO-M8N)
const uint32_t GPS_BAUD = 9600;

///////////////////////   LEDS  ////////////////////////////////////
//LED ports
#define PIN_LED_RX 33
#define PIN_LED_TX 2
#define PIN_LED_ONBOARD 26
const int ledPin = 2; // Built-in LED on some ESP32 boards or external LED

/////////////////////// VARIABLES ////////////////////////////////
// Distance threshold in meters tweek at your best interest
const double distanceThreshold = 25.0; // distance at which the signal will be sent expressed in meters
const double resetdistanceThreshold = 100.0; // distance to reset the no resend trigger expressed in meters

// Empty variable definition
unsigned long opendelay; // variable to count time between signals
unsigned long resetstatus; // variable to clear status line after 5 seconds
unsigned long sendRFwithoutGPS; // 
unsigned long currenttime; // 
int timetosendRFwithoutGPS = 60000;
int timebetweenresends = 60000; // wait time between sends in milliseconds.


String logs = "";
String state = "";
bool trigger1 = false;
bool trigger2 = false;
bool trigger3 = false;
bool trigger4 = false;
bool trigger5 = false;
bool trigger6 = false;
bool trigger7 = false;
bool trigger8 = false;
bool ingarageandnotyetgps = true;

////////////////////////////////////////////////////////////////
//////////////// ADDRESSES AND CODES ///////////////////////////
////////////////////////////////////////////////////////////////
///////////////// DECODE .SUB FILES HERE: //////////////////////
///////  https://simondankelmann.github.io/Esp32-SubGhz/ ///////
////////////////////////////////////////////////////////////////
///////// GET LATITUDE AND LONGITUDE USING GOOGLE MAPS /////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
// ADDRESS 1: 
// DESCRIPTION: 
String location1 = "name your 1st location";
const double targetLat1 = 51.50142064413959;
const double targetLon1 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_1 1180
#define FREQUENCY_SIGNAL_1 433.92
int samples_signal_1[LENGTH_SAMPLES_SIGNAL_1] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 2: 
// DESCRIPTION: 
String location2 = "name your 2nd location";
const double targetLat2 = 51.50142064413959;
const double targetLon2 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_2 1180
#define FREQUENCY_SIGNAL_2 433.92
int samples_signal_2[LENGTH_SAMPLES_SIGNAL_2] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 3: 
// DESCRIPTION: 
String location3 = "name your 3rd location";
const double targetLat3 = 51.50142064413959;
const double targetLon3 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_3 1180
#define FREQUENCY_SIGNAL_3 433.92
int samples_signal_3[LENGTH_SAMPLES_SIGNAL_3] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};

////////////////////////////////////////////////////////////////
// ADDRESS 4: 
// DESCRIPTION: 
String location4 = "name your 4th location";
const double targetLat4 = 51.50142064413959;
const double targetLon4 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_4 1180
#define FREQUENCY_SIGNAL_4 433.92
int samples_signal_4[LENGTH_SAMPLES_SIGNAL_4] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 5: 
// DESCRIPTION: 
String location5 = "name your 5th location";
const double targetLat5 = 51.50142064413959;
const double targetLon5 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_5 1180
#define FREQUENCY_SIGNAL_5 433.92
int samples_signal_5[LENGTH_SAMPLES_SIGNAL_5] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 6: 
// DESCRIPTION: 
String location6 = "Buckingham Palace";
const double targetLat6 = 51.50142064413959;
const double targetLon6 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_6 1180
#define FREQUENCY_SIGNAL_6 433.92
int samples_signal_6[LENGTH_SAMPLES_SIGNAL_6] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 7: 
// DESCRIPTION: 
String location7 = "Buckingham Palace";
const double targetLat7 = 51.50142064413959;
const double targetLon7 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_7 1180
#define FREQUENCY_SIGNAL_7 433.92
int samples_signal_7[LENGTH_SAMPLES_SIGNAL_7] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


////////////////////////////////////////////////////////////////
// ADDRESS 8: 
// DESCRIPTION: 
String location8 = "Buckingham Palace";
const double targetLat8 = 51.50142064413959;
const double targetLon8 = -0.14164269166884363;
#define LENGTH_SAMPLES_SIGNAL_8 1180
#define FREQUENCY_SIGNAL_8 433.92
int samples_signal_8[LENGTH_SAMPLES_SIGNAL_8] = {400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-400,400,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,800,-1200,400,-400,400,-400,800,-800,400,-400,800,-800,800,-800,400,-400,800,-800,800,-800,800,-800,800,-800,800,-800,400,-400,800,-400,400,-800,800,-400,400,-800,400,-400,800,-400,400,-400,400,-800,400,-400,400,-400,800,-400,400,-800,800,-400,400,-800,800,-800,400,-400,400,-400,400,-400,800,-400,400,-800,400,-400,400,-25000};


/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////
////////////////    FUNCTION DEFINITION    //////////////////////
/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////

void appendLog(String message) {
    logs += message + "<br>";
    if (logs.length() > 5000) {
        logs = logs.substring(logs.length() - 5000);
    }
}

void summaryLog(String distance1, String distance2, String distance3, String distance4, String distance5, String distance6, String distance7, String distance8) {
    logs = String("<br><br><br><table border='1' style='border-collapse: collapse; text-align: center;'><tr><td><b>") + location1 + String("</b></td><td><b>") + location2 +String("</b></td><td><b>") + location3 + String("</b></td><td><b>") + location4 + String("</b></td></tr><tr><td>")
    + distance1 + String("</td><td>") + distance2 + String("</td><td>") + distance3 + String("</td><td>") + distance4 + String("</td></tr><tr><td>")
    + trigger1 + String("</td><td>") + trigger2 + String("</td><td>") + trigger3 + String("</td><td>") + trigger4 + String("</td></tr><tr><td><b>")
    + location5 + String("</b></td><td><b>") + location6 + String("</b></td><td><b>") + location7 + String("</b></td><td><b>") + location8 + String("</b></td></tr><tr><td>")
    + distance5 + String("</td><td>") + distance6 + String("</td><td>") + distance7 + String("</td><td>") + distance8 + String("</td></tr><tr><td>")
    + trigger5 + String("</td><td>") + trigger6 + String("</td><td>") + trigger7 + String("</td><td>") + trigger8 + String("</td></tr><tr><td colspan='4'>&nbsp;")  
    + state + String("</td></tr></table>");
}
   

void appendLognonewline(String message) {
    logs += message;
    if (logs.length() > 5000) {
        logs = logs.substring(logs.length() - 5000);
    }
}
void handleRoot() {
    String html = "<html><head><script>"
                   "function updateLogs() {"
                   "fetch('/logs').then(response => response.text()).then(data => {"
                   "document.getElementById('logContainer').innerHTML = data;"
                   "});"
                   "}"
                   "setInterval(updateLogs, 2000);"
                   "function door1() {"
                   "fetch('/door1').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door2() {"
                   "fetch('/door2').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door3() {"
                   "fetch('/door3').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door4() {"
                   "fetch('/door4').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door5() {"
                   "fetch('/door5').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door6() {"
                   "fetch('/door6').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door7() {"
                   "fetch('/door7').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function door8() {"
                   "fetch('/door8').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   "function cleartrigger() {"
                   "fetch('/cleartrigger').then(response => response.text()).then(data => console.log(data)).catch(err => console.error('Error:', err));"
                   "}"
                   
                   "</script></head><body>"
                   "<h2>DIY GPS Homelink</h2>"
                   "<br>"
                   "<h1><button onclick='door1()' style='width: 150px; height: 50px;'>" + location1 + "</button>        <button onclick='door2()' style='width: 150px; height: 50px;'>" + location2 + "</button>        <button onclick='door3()' style='width: 150px; height: 50px;'>" + location3 + "</button>        <button onclick='door4()' style='width: 150px; height: 50px;'>" + location4 + "</button>"
                   "<br><br>"
                   "<button onclick='door5()' style='width: 150px; height: 50px;'>" + location5 + "</button>        <button onclick='door6()' style='width: 150px; height: 50px;'>" + location6 + "</button>        <button onclick='door7()' style='width: 150px; height: 50px;'>" + location7 + "</button>        <button onclick='door8()' style='width: 150px; height: 50px;'>" + location8 + "</button></h1>"
                   "<br><br>"
                   "<div id='logContainer'>" + logs + "</div>"
                   "<br><br>"
                   "<button onclick='cleartrigger()' style='width: 600px; height: 50px;'> Reset trigger limitation </button>"
                   "</body></html>";
    server.send(200, "text/html", html);
}

void handleLogs() {
    server.send(200, "text/plain", logs);
}

void door1() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 1: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 1"; 
      sendSamples(samples_signal_1, LENGTH_SAMPLES_SIGNAL_1, FREQUENCY_SIGNAL_1);
      resetstatus = millis();
}

void door2() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 2: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 2"; 
      sendSamples(samples_signal_2, LENGTH_SAMPLES_SIGNAL_2, FREQUENCY_SIGNAL_2);
      resetstatus = millis();
}

void door3() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 3: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 3"; 
      sendSamples(samples_signal_3, LENGTH_SAMPLES_SIGNAL_3, FREQUENCY_SIGNAL_3);
      resetstatus = millis();
}

void door4() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 4: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 4"; 
      sendSamples(samples_signal_4, LENGTH_SAMPLES_SIGNAL_4, FREQUENCY_SIGNAL_4);
      resetstatus = millis();
}

void door5() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 5: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 5"; 
      sendSamples(samples_signal_5, LENGTH_SAMPLES_SIGNAL_5, FREQUENCY_SIGNAL_5);
      resetstatus = millis();
}

void door6() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 6: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 6"; 
      sendSamples(samples_signal_6, LENGTH_SAMPLES_SIGNAL_6, FREQUENCY_SIGNAL_6);
      resetstatus = millis();
}

void door7() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 7: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 7"; 
      sendSamples(samples_signal_7, LENGTH_SAMPLES_SIGNAL_7, FREQUENCY_SIGNAL_7);
      resetstatus = millis();
}

void door8() {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("button pressed opening door 8: LED ON");
      state = "GUI BUTTON PRESSED. OPENING DOOR 8"; 
      sendSamples(samples_signal_8, LENGTH_SAMPLES_SIGNAL_8, FREQUENCY_SIGNAL_8);
      resetstatus = millis();
}

void cleartrigger() {
      trigger1 = false;
      trigger2 = false;
      trigger3 = false;
      trigger4 = false;
      trigger5 = false;
      trigger6 = false;
      trigger7 = false;
      trigger8 = false;
      state = "triggers cleared"; 
      resetstatus = millis();

}

void initCC1101(float mhz){
    ELECHOUSE_cc1101.Init();
    ELECHOUSE_cc1101.setGDO(PIN_GDO0, PIN_GDO2);
    ELECHOUSE_cc1101.setMHZ(mhz);        // Here you can set your basic frequency. The lib calculates the frequency automatically (default = 433.92).The cc1101 can: 300-348 MHZ, 387-464MHZ and 779-928MHZ. Read More info from datasheet.
    ELECHOUSE_cc1101.SetTx();               // set Transmit on
    ELECHOUSE_cc1101.setModulation(2);      // set modulation mode. 0 = 2-FSK, 1 = GFSK, 2 = ASK/OOK, 3 = 4-FSK, 4 = MSK.
    ELECHOUSE_cc1101.setDRate(512);         // Set the Data Rate in kBaud. Value from 0.02 to 1621.83. Default is 99.97 kBaud!
    ELECHOUSE_cc1101.setPktFormat(3);       // Format of RX and TX data. 0 = Normal mode, use FIFOs for RX and TX. 
                                            // 1 = Synchronous serial mode, Data in on GDO0 and data out on either of the GDOx pins. 
                                            // 2 = Random TX mode; sends random data using PN9 generator. Used for test. Works as normal mode, setting 0 (00), in RX. 
                                            // 3 = Asynchronous serial mode, Data in on GDO0 and data out on either of the GDOx pins.
  
    if(!ELECHOUSE_cc1101.getCC1101()){       // Check the CC1101 Spi connection.
      Serial.println("CC1101 Connection Error");
    } 
}

void sendSamples(int samples[], int samplesLenght, float mhz) {
  initCC1101(mhz);
  digitalWrite(PIN_LED_TX, HIGH);
  Serial.print("Transmitting ");
  Serial.print(samplesLenght);
  Serial.println(" Samples");

  int delay = 0;
  unsigned long time;
  byte n = 0;

  for (int i=0; i < samplesLenght; i++) {
    // TRANSMIT
    n = 1;
    delay = samples[i];
    if(delay < 0){
      // DONT TRANSMIT
      delay = delay * -1;
      n = 0;
    }

    digitalWrite(PIN_GDO0,n);
    
    delayMicroseconds(delay);
  }

  // STOP TRANSMITTING
  digitalWrite(PIN_GDO0,0);

  Serial.println("Transmission completed.");
  digitalWrite(PIN_LED_TX, LOW);
}


/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////
/////////////////////////    SETUP    ///////////////////////////
/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////


void setup() {
  // Start serial communication for debugging
  Serial.begin(115200);
  //while (!Serial); // Wait for serial monitor to open (optional)

  WiFi.softAP(ssid, password);
  server.on("/", handleRoot);
  server.on("/logs", handleLogs);
  server.on("/door1", door1);
  server.on("/door2", door2);
  server.on("/door3", door3);
  server.on("/door4", door4);
  server.on("/door5", door5);
  server.on("/door6", door6);
  server.on("/door7", door7);
  server.on("/door8", door8);
  server.on("/cleartrigger", cleartrigger);
  
  
  server.begin();
  appendLog("<br><br>HOMELINK log server enabled");

  // Initialize the LED pin as OUTPUT
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW);

  //CC1101 SETUP
  initCC1101(433.92);

  if (ELECHOUSE_cc1101.getCC1101()){      
    // Check the CC1101 Spi connection.
    Serial.println("CC1101 Connection OK");
    appendLog("Successful connection with module CC1101");
  }

  // Initialize the GPS serial port
  gpsSerial.begin(GPS_BAUD, SERIAL_8N1, GPS_RX_PIN, GPS_TX_PIN);
  Serial.println("GPS tracking started...");
  appendLog("Starting GPS Connection");
  appendLog("According to current configuration, doors will open when closer than " + String(distanceThreshold) + " meters.");
  opendelay = millis();
  sendRFwithoutGPS = millis();
}

/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////
/////////////////////////    LOOP    ////////////////////////////
/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////

void loop() {
  server.handleClient();
  // Read data from the GPS module
  while (gpsSerial.available() > 0) {
    char c = gpsSerial.read();
    gps.encode(c);
  }
  delay(500);
//  Serial.println();
  
  
  // Check if a new GPS location is available and is updated
  if (gps.location.isValid() && gps.location.isUpdated()) { 
    ingarageandnotyetgps = false;
    double currentLat = gps.location.lat();
    double currentLon = gps.location.lng();

    // Calculate distance (in meters) using TinyGPS++'s built-in function
    //Distance to 1
    double distanceTo1 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat1, targetLon1
    );

    //Distance to 2
    double distanceTo2 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat2, targetLon2
    );

    //Distance to 3
    double distanceTo3 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat3, targetLon3
    );

    //Distance to 4
    
    double distanceTo4 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat4, targetLon4
    );

    //Distance to 5
    double distanceTo5 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat5, targetLon5
    );

    //Distance to 6
    double distanceTo6 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat6, targetLon6
    );

    //Distance to 7
    double distanceTo7 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat7, targetLon7
    );

    //Distance to 8
    
    double distanceTo8 = TinyGPSPlus::distanceBetween(
      currentLat, currentLon,
      targetLat8, targetLon8
    );


    // Print the current position and distance for debugging
    Serial.print("Current Location: ");
    Serial.print(currentLat, 8);
    Serial.print(", ");
    Serial.println(currentLon, 8);
    Serial.print("Distance to 1: ");
    Serial.print(distanceTo1);
    Serial.print("  |  Distance to 2: ");
    Serial.print(distanceTo2);
    Serial.print("  |  Distance to 3: ");
    Serial.print(distanceTo3);
    Serial.print("  |  Distance to 4: ");
    Serial.println(distanceTo4);
    Serial.print("Distance to 5: ");
    Serial.print(distanceTo5);
    Serial.print("  |  Distance to 6: ");
    Serial.print(distanceTo6);
    Serial.print("  |  Distance to 7: ");
    Serial.print(distanceTo7);
    Serial.print("  |  Distance to 8: ");
    Serial.println(distanceTo8);
    Serial.println("distances expressed in meters");

    summaryLog(String(distanceTo1), String(distanceTo2), String(distanceTo3), String(distanceTo4), String(distanceTo5), String(distanceTo6), String(distanceTo7), String(distanceTo8));
    
    // Check if the distance is less than or equal to the threshold and stop sending signal for a minute
    if (distanceTo1 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger1 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 1: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 1, sending signal"; 
      sendSamples(samples_signal_1, LENGTH_SAMPLES_SIGNAL_1, FREQUENCY_SIGNAL_1);
      opendelay = millis();
      trigger1 = true;
      delay(250);
    } 

    if (distanceTo2 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger2 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 2: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 2, sending signal"; 
      sendSamples(samples_signal_2, LENGTH_SAMPLES_SIGNAL_2, FREQUENCY_SIGNAL_2);
      trigger2 = true;
      opendelay = millis();
      delay(250);
    } 


    if (distanceTo3 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger3 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 3: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 3, sending signal"; 
      sendSamples(samples_signal_3, LENGTH_SAMPLES_SIGNAL_3, FREQUENCY_SIGNAL_3);
      trigger3 = true;
      opendelay = millis();
      
      delay(250);
    } 


    if (distanceTo4 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger4 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 4: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 4, sending signal"; 
      sendSamples(samples_signal_4, LENGTH_SAMPLES_SIGNAL_4, FREQUENCY_SIGNAL_4);
      trigger4 = true;
      opendelay = millis();
      delay(250);
    } 

    // Check if the distance is less than or equal to the threshold
    if (distanceTo5 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger5 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within to door 5: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 5, sending signal"; 
      sendSamples(samples_signal_5, LENGTH_SAMPLES_SIGNAL_5, FREQUENCY_SIGNAL_5);
      trigger5 = true;
      opendelay = millis();
      delay(250);
    } 

    if (distanceTo6 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger6 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 6: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 6, sending signal"; 
      sendSamples(samples_signal_6, LENGTH_SAMPLES_SIGNAL_6, FREQUENCY_SIGNAL_6);
      trigger6 = true;
      opendelay = millis();
      delay(250);
    } 


    if (distanceTo7 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger7 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 7: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 7, sending signal"; 
      sendSamples(samples_signal_7, LENGTH_SAMPLES_SIGNAL_7, FREQUENCY_SIGNAL_7);
      trigger7 = true;
      opendelay = millis();
      delay(250);
    } 


    if (distanceTo8 <= distanceThreshold && (millis() - opendelay) > timebetweenresends && trigger8 == false ) {
      digitalWrite(ledPin, HIGH);  // Turn on LED
      Serial.println("Within range to door 8: LED ON");
      state = "Closer than " + String(distanceThreshold) + " meters from location 8, sending signal"; 
      sendSamples(samples_signal_8, LENGTH_SAMPLES_SIGNAL_8, FREQUENCY_SIGNAL_8);
      trigger8 = true;
      opendelay = millis();
      delay(250);
    } 
      
    digitalWrite(ledPin, LOW);   // Turn off LED
    Serial.println("Not within range: LED OFF");

    // reset triggers if distance is greater than threshold to avoid multiple remote sends
    
    if (distanceTo1 > resetdistanceThreshold && trigger1 == true) {
      trigger1 = false;
      state = "Leaving area, reenabling device for sending signals";
      resetstatus = millis();
      
    }
    if (distanceTo2 > resetdistanceThreshold && trigger2 == true) {
      trigger2 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();      
    }
    if (distanceTo3 > resetdistanceThreshold && trigger3 == true) {
      trigger3 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();      
    }
    if (distanceTo4 > resetdistanceThreshold && trigger4 == true) {
      trigger4 = false;
      state = "Leaving area, reenabling device for sending signals";
      resetstatus = millis();
    }
    if (distanceTo5 > resetdistanceThreshold && trigger5 == true) {
      trigger5 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();
    }
    if (distanceTo6 > resetdistanceThreshold && trigger6 == true) {
      trigger6 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();
    }
    if (distanceTo7 > resetdistanceThreshold && trigger7 == true) {
      trigger7 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();
    }
    if (distanceTo8 > resetdistanceThreshold && trigger8 == true) {
      trigger8 = false;
      state = "Leaving area, reenabling device for sending signals"; 
      resetstatus = millis();
    }

    
  } else {
    appendLognonewline("X");
    if (ingarageandnotyetgps == true) {
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_1, LENGTH_SAMPLES_SIGNAL_1, FREQUENCY_SIGNAL_1);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_2, LENGTH_SAMPLES_SIGNAL_2, FREQUENCY_SIGNAL_2);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_3, LENGTH_SAMPLES_SIGNAL_3, FREQUENCY_SIGNAL_3);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_4, LENGTH_SAMPLES_SIGNAL_4, FREQUENCY_SIGNAL_4);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_5, LENGTH_SAMPLES_SIGNAL_5, FREQUENCY_SIGNAL_5);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_6, LENGTH_SAMPLES_SIGNAL_6, FREQUENCY_SIGNAL_6);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_7, LENGTH_SAMPLES_SIGNAL_7, FREQUENCY_SIGNAL_7);
        delay(1500);
      }
      if (WiFi.softAPgetStationNum() == 0) {
        sendSamples(samples_signal_8, LENGTH_SAMPLES_SIGNAL_8, FREQUENCY_SIGNAL_8);
        delay(1500);
      }

      currenttime = millis() - sendRFwithoutGPS;
      if (currenttime > timetosendRFwithoutGPS) {
        ingarageandnotyetgps = false;
      }
    }
  }
  if (millis() - resetstatus > 10000) {
    state = "";
  }
  // Small delay to avoid overwhelming the serial port
  delay(500);
}
